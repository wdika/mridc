# coding=utf-8
# Automatically generated by Pynguin.
import os as module_1

import mridc.collections.quantitative.data.qmri_data as module_0


def test_case_0():
    try:
        str_0 = """If you intend to do training or fine-tuning, please call the ModelPT.setup_training_data() method and provide a valid configuration file to setup the train data loader.
Train config :
"""
        str_1 = ",F\x0b}9B"
        int_0 = 47
        set_0 = set()
        q_m_r_i_slice_dataset_0 = module_0.qMRISliceDataset(str_0, str_0, str_1, set_0, int_0)
    except BaseException:
        pass


def test_case_1():
    try:
        str_0 = "p:1nJ"
        bool_0 = False
        q_m_r_i_slice_dataset_0 = module_0.qMRISliceDataset(str_0, str_0, bool_0, str_0)
    except BaseException:
        pass


def test_case_2():
    try:
        path_like_0 = module_1.PathLike()
    except BaseException:
        pass


def test_case_3():
    try:
        str_0 = "?"
        dict_0 = {str_0: str_0}
        path_like_0 = module_1.PathLike(**dict_0)
    except BaseException:
        pass


def test_case_4():
    try:
        str_0 = "b;hF\x0c\to,L*j"
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        path_like_0 = module_1.PathLike(**dict_0)
    except BaseException:
        pass


def test_case_5():
    try:
        str_0 = "M?"
        bytes_0 = None
        float_0 = -180.609
        q_m_r_i_slice_dataset_0 = module_0.qMRISliceDataset(str_0, bytes_0, str_0, str_0, str_0, float_0)
    except BaseException:
        pass
