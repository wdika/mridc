# coding=utf-8
# Automatically generated by Pynguin.
import mridc.core.conf.base_config as module_0


def test_case_0():
    config_0 = module_0.Config()
    assert config_0.name is None
    assert module_0.Config.name is None
    config_1 = module_0.Config()
    assert config_1.name is None
    config_2 = module_0.Config()
    assert config_2.name is None
    config_3 = module_0.Config()
    assert config_3.name is None
    str_0 = "$H"
    config_4 = module_0.Config()
    assert config_4.name is None
    config_5 = module_0.Config(str_0)
    assert config_5.name == "$H"
    config_6 = module_0.Config()
    assert config_6.name is None


def test_case_1():
    config_0 = module_0.Config()
    assert config_0.name is None
    assert module_0.Config.name is None
    config_1 = module_0.Config()
    assert config_1.name is None
    str_0 = "}<cu`){&G\\]\\7a8%jI`"
    config_2 = module_0.Config()
    assert config_2.name is None
    config_3 = module_0.Config(str_0)
    assert config_3.name == "}<cu`){&G\\]\\7a8%jI`"
    config_4 = module_0.Config()
    assert config_4.name is None
    config_5 = module_0.Config(str_0)
    assert config_5.name == "}<cu`){&G\\]\\7a8%jI`"
    config_6 = module_0.Config(str_0)
    assert config_6.name == "}<cu`){&G\\]\\7a8%jI`"
    config_7 = module_0.Config()
    assert config_7.name is None
    config_8 = module_0.Config()
    assert config_8.name is None
    config_9 = module_0.Config(str_0)
    assert config_9.name == "}<cu`){&G\\]\\7a8%jI`"
    str_1 = "6:*GQsu"
    config_10 = module_0.Config(str_1)
    assert config_10.name == "6:*GQsu"
    config_11 = module_0.Config()
    assert config_11.name is None
    config_12 = module_0.Config()
    assert config_12.name is None
    config_13 = module_0.Config()
    assert config_13.name is None
    config_14 = module_0.Config()
    assert config_14.name is None
    config_15 = module_0.Config()
    assert config_15.name is None
    config_16 = module_0.Config()
    assert config_16.name is None
    config_17 = module_0.Config()
    assert config_17.name is None
    config_18 = module_0.Config()
    assert config_18.name is None
    config_19 = module_0.Config()
    assert config_19.name is None


def test_case_2():
    str_0 = "ImX<P7C.S`.N9[%TI~v"
    config_0 = module_0.Config()
    assert config_0.name is None
    assert module_0.Config.name is None
    config_1 = module_0.Config()
    assert config_1.name is None
    config_2 = module_0.Config(str_0)
    assert config_2.name == "ImX<P7C.S`.N9[%TI~v"
    str_1 = ""
    config_3 = module_0.Config()
    assert config_3.name is None
    config_4 = module_0.Config()
    assert config_4.name is None
    config_5 = module_0.Config(str_0)
    assert config_5.name == "ImX<P7C.S`.N9[%TI~v"
    config_6 = module_0.Config(str_1)
    assert config_6.name == ""
    config_7 = module_0.Config()
    assert config_7.name is None
    config_8 = module_0.Config(str_0)
    assert config_8.name == "ImX<P7C.S`.N9[%TI~v"
    config_9 = module_0.Config()
    assert config_9.name is None
    config_10 = module_0.Config()
    assert config_10.name is None
    config_11 = module_0.Config()
    assert config_11.name is None
    config_12 = module_0.Config()
    assert config_12.name is None
    config_13 = module_0.Config()
    assert config_13.name is None
    config_14 = module_0.Config()
    assert config_14.name is None
    config_15 = module_0.Config()
    assert config_15.name is None


def test_case_3():
    config_0 = module_0.Config()
    assert config_0.name is None
    assert module_0.Config.name is None
    config_1 = module_0.Config()
    assert config_1.name is None
    config_2 = module_0.Config()
    assert config_2.name is None
    config_3 = module_0.Config()
    assert config_3.name is None
    str_0 = "~b{qS"
    config_4 = module_0.Config(str_0)
    assert config_4.name == "~b{qS"
    config_5 = module_0.Config(str_0)
    assert config_5.name == "~b{qS"
    config_6 = module_0.Config()
    assert config_6.name is None
    config_7 = module_0.Config()
    assert config_7.name is None
    config_8 = module_0.Config()
    assert config_8.name is None
    config_9 = module_0.Config()
    assert config_9.name is None
    config_10 = module_0.Config()
    assert config_10.name is None
    config_11 = module_0.Config()
    assert config_11.name is None
    config_12 = module_0.Config()
    assert config_12.name is None
    config_13 = module_0.Config()
    assert config_13.name is None
    config_14 = module_0.Config(str_0)
    assert config_14.name == "~b{qS"
    config_15 = module_0.Config()
    assert config_15.name is None
    config_16 = module_0.Config()
    assert config_16.name is None
    config_17 = module_0.Config()
    assert config_17.name is None
    config_18 = module_0.Config(str_0)
    assert config_18.name == "~b{qS"
    config_19 = module_0.Config()
    assert config_19.name is None
    config_20 = module_0.Config()
    assert config_20.name is None
    config_21 = module_0.Config(str_0)
    assert config_21.name == "~b{qS"


def test_case_4():
    str_0 = "-7cql N AG"
    config_0 = module_0.Config(str_0)
    assert config_0.name == "-7cql N AG"
    assert module_0.Config.name is None
    str_1 = "Zx@53[%B94\rah1)Mw"
    config_1 = module_0.Config(str_1)
    assert config_1.name == "Zx@53[%B94\rah1)Mw"
    config_2 = module_0.Config()
    assert config_2.name is None
    config_3 = module_0.Config()
    assert config_3.name is None
    config_4 = module_0.Config()
    assert config_4.name is None
    config_5 = module_0.Config()
    assert config_5.name is None
    str_2 = "3{;YVZ`"
    config_6 = module_0.Config()
    assert config_6.name is None
    config_7 = module_0.Config(str_2)
    assert config_7.name == "3{;YVZ`"
    config_8 = module_0.Config()
    assert config_8.name is None
    config_9 = module_0.Config()
    assert config_9.name is None
    config_10 = module_0.Config()
    assert config_10.name is None
    config_11 = module_0.Config()
    assert config_11.name is None


def test_case_5():
    config_0 = module_0.Config()
    assert config_0.name is None
    assert module_0.Config.name is None
    config_1 = module_0.Config()
    assert config_1.name is None
    config_2 = module_0.Config()
    assert config_2.name is None
    var_0 = None
    config_3 = module_0.Config(var_0)
    assert config_3.name is None
    config_4 = module_0.Config()
    assert config_4.name is None
    str_0 = "cfg"
    config_5 = module_0.Config(str_0)
    assert config_5.name == "cfg"
    config_6 = module_0.Config()
    assert config_6.name is None
    config_7 = module_0.Config()
    assert config_7.name is None
    var_1 = None
    config_8 = module_0.Config()
    assert config_8.name is None
    config_9 = module_0.Config(str_0)
    assert config_9.name == "cfg"
    config_10 = module_0.Config(var_1)
    assert config_10.name is None
    config_11 = module_0.Config(str_0)
    assert config_11.name == "cfg"
    config_12 = module_0.Config()
    assert config_12.name is None
    str_1 = ",IG{G&RVbf'5k<leR"
    config_13 = module_0.Config()
    assert config_13.name is None
    config_14 = module_0.Config(str_1)
    assert config_14.name == ",IG{G&RVbf'5k<leR"
    config_15 = module_0.Config(str_1)
    assert config_15.name == ",IG{G&RVbf'5k<leR"
    config_16 = module_0.Config()
    assert config_16.name is None
    config_17 = module_0.Config()
    assert config_17.name is None
    config_18 = module_0.Config()
    assert config_18.name is None


def test_case_6():
    str_0 = "U"
    config_0 = module_0.Config(str_0)
    assert config_0.name == "U"
    assert module_0.Config.name is None
    str_1 = None
    config_1 = module_0.Config(str_0)
    assert config_1.name == "U"
    config_2 = module_0.Config()
    assert config_2.name is None
    config_3 = module_0.Config()
    assert config_3.name is None
    config_4 = module_0.Config(str_1)
    assert config_4.name is None


def test_case_7():
    var_0 = None
    config_0 = module_0.Config(var_0)
    assert config_0.name is None
    assert module_0.Config.name is None
    config_1 = module_0.Config()
    assert config_1.name is None
    config_2 = module_0.Config()
    assert config_2.name is None
    str_0 = ""
    config_3 = module_0.Config()
    assert config_3.name is None
    config_4 = module_0.Config(str_0)
    assert config_4.name == ""
    config_5 = module_0.Config(str_0)
    assert config_5.name == ""
    config_6 = module_0.Config()
    assert config_6.name is None
    config_7 = module_0.Config()
    assert config_7.name is None
    config_8 = module_0.Config()
    assert config_8.name is None
    config_9 = module_0.Config(str_0)
    assert config_9.name == ""
    config_10 = module_0.Config(str_0)
    assert config_10.name == ""
    config_11 = module_0.Config()
    assert config_11.name is None
