# coding=utf-8
# Automatically generated by Pynguin.
import pytest

import mridc.collections.segmentation.parts.transforms as module_0


def test_case_0():
    try:
        int_0 = 986
        bool_0 = False
        bool_1 = False
        str_0 = None
        int_1 = None
        int_2 = 40
        int_3 = None
        bool_2 = True
        list_0 = [bool_1, bool_1, str_0]
        bool_3 = False
        j_r_s_m_r_i_data_transforms_0 = module_0.JRSMRIDataTransforms(
            int_1, int_2, int_0, bool_0, int_3, bool_2, list_0, bool_0, str_0, bool_3
        )
    except BaseException:
        pass


def test_case_1():
    try:
        int_0 = None
        int_1 = -711
        str_0 = "bq7!QUA~\n*uh'aPrtLi"
        mask_func_0 = None
        list_0 = [mask_func_0, mask_func_0, mask_func_0]
        bool_0 = True
        none_type_0 = None
        j_r_s_m_r_i_data_transforms_0 = module_0.JRSMRIDataTransforms(
            int_0, int_1, int_0, str_0, list_0, bool_0, none_type_0, str_0
        )
    except BaseException:
        pass


def test_case_2():
    try:
        bool_0 = False
        int_0 = -1671
        tensor_0 = None
        str_0 = "VW\\D&Q!eGht"
        int_1 = -3934
        tuple_0 = (tensor_0, tensor_0, tensor_0, tensor_0, tensor_0,
                   tensor_0, tensor_0, str_0, int_1, tensor_0)
        dict_0 = {str_0: str_0, str_0: tuple_0}
        list_0 = [tuple_0, dict_0]
        bool_1 = False
        j_r_s_m_r_i_data_transforms_0 = module_0.JRSMRIDataTransforms(
            int_0, list_0, bool_0, bool_1, str_0, int_0)
    except BaseException:
        pass


def test_case_3():
    try:
        bool_0 = False
        float_0 = 551.0
        int_0 = 330
        str_0 = "6_Q"
        bool_1 = True
        bool_2 = True
        list_0 = []
        j_r_s_m_r_i_data_transforms_0 = module_0.JRSMRIDataTransforms(
            bool_1, int_0, int_0, bool_2, str_0, list_0, float_0, bool_0, int_0
        )
    except BaseException:
        pass


def test_case_4():
    try:
        float_0 = 1377.416813
        none_type_0 = None
        float_1 = 1923.1
        none_type_1 = None
        bool_0 = False
        j_r_s_m_r_i_data_transforms_0 = module_0.JRSMRIDataTransforms(
            float_0, none_type_0, float_0, float_1, none_type_1, bool_0
        )
        assert j_r_s_m_r_i_data_transforms_0.complex_data == pytest.approx(
            1377.416813, abs=0.01, rel=0.01)
        assert j_r_s_m_r_i_data_transforms_0.coil_combination_method == "SENSE"
        assert j_r_s_m_r_i_data_transforms_0.dimensionality == 2
        assert j_r_s_m_r_i_data_transforms_0.mask_func is None
        assert j_r_s_m_r_i_data_transforms_0.shift_mask is False
        assert j_r_s_m_r_i_data_transforms_0.mask_center_scale == pytest.approx(
            0.02, abs=0.01, rel=0.01)
        assert j_r_s_m_r_i_data_transforms_0.half_scan_percentage == pytest.approx(
            0.0, abs=0.01, rel=0.01)
        assert j_r_s_m_r_i_data_transforms_0.remask is False
        assert j_r_s_m_r_i_data_transforms_0.crop_size is None
        assert j_r_s_m_r_i_data_transforms_0.kspace_crop is False
        assert j_r_s_m_r_i_data_transforms_0.crop_before_masking is True
        assert j_r_s_m_r_i_data_transforms_0.kspace_zero_filling_size is None
        assert j_r_s_m_r_i_data_transforms_0.normalize_inputs is False
        assert j_r_s_m_r_i_data_transforms_0.max_norm is True
        assert j_r_s_m_r_i_data_transforms_0.fft_centered is True
        assert j_r_s_m_r_i_data_transforms_0.fft_normalization == "ortho"
        assert j_r_s_m_r_i_data_transforms_0.spatial_dims == [-2, -1]
        assert j_r_s_m_r_i_data_transforms_0.coil_dim == -1
        assert j_r_s_m_r_i_data_transforms_0.apply_prewhitening is None
        assert j_r_s_m_r_i_data_transforms_0.prewhitening is None
        assert j_r_s_m_r_i_data_transforms_0.gcc is None
        assert j_r_s_m_r_i_data_transforms_0.use_seed is True
        bool_1 = None
        mask_func_0 = None
        list_0 = [bool_1, mask_func_0]
        ndarray_0 = None
        dict_0 = {mask_func_0: j_r_s_m_r_i_data_transforms_0,
                  j_r_s_m_r_i_data_transforms_0: list_0}
        str_0 = "\rn(|RLF_llJ"
        int_0 = -1335
        tuple_0 = j_r_s_m_r_i_data_transforms_0.__call__(
            ndarray_0, ndarray_0, ndarray_0, ndarray_0, ndarray_0, dict_0, str_0, int_0
        )
    except BaseException:
        pass


def test_case_5():
    try:
        ndarray_0 = None
        int_0 = -98
        str_0 = '9cH8"'
        dict_0 = {ndarray_0: int_0, int_0: str_0, int_0: str_0}
        str_1 = "'o^\x0c"
        int_1 = 3363
        int_2 = 3518
        str_2 = "kG6/fN36<P@6>:sZ\nK"
        bool_0 = True
        int_3 = -57
        tuple_0 = int_3, int_3
        bool_1 = True
        j_r_s_m_r_i_data_transforms_0 = module_0.JRSMRIDataTransforms(
            bool_1, int_2, str_2, bool_1, bool_0, tuple_0, bool_1, bool_1
        )
        assert j_r_s_m_r_i_data_transforms_0.complex_data is True
        assert j_r_s_m_r_i_data_transforms_0.coil_combination_method == "SENSE"
        assert j_r_s_m_r_i_data_transforms_0.dimensionality == 2
        assert j_r_s_m_r_i_data_transforms_0.mask_func is None
        assert j_r_s_m_r_i_data_transforms_0.shift_mask is False
        assert j_r_s_m_r_i_data_transforms_0.mask_center_scale == pytest.approx(
            0.02, abs=0.01, rel=0.01)
        assert j_r_s_m_r_i_data_transforms_0.half_scan_percentage == pytest.approx(
            0.0, abs=0.01, rel=0.01)
        assert j_r_s_m_r_i_data_transforms_0.remask is False
        assert j_r_s_m_r_i_data_transforms_0.crop_size is None
        assert j_r_s_m_r_i_data_transforms_0.kspace_crop is False
        assert j_r_s_m_r_i_data_transforms_0.crop_before_masking is True
        assert j_r_s_m_r_i_data_transforms_0.kspace_zero_filling_size is None
        assert j_r_s_m_r_i_data_transforms_0.normalize_inputs is False
        assert j_r_s_m_r_i_data_transforms_0.max_norm is True
        assert j_r_s_m_r_i_data_transforms_0.fft_centered is True
        assert j_r_s_m_r_i_data_transforms_0.fft_normalization == "ortho"
        assert j_r_s_m_r_i_data_transforms_0.spatial_dims == [-2, -1]
        assert j_r_s_m_r_i_data_transforms_0.coil_dim == -1
        assert j_r_s_m_r_i_data_transforms_0.apply_prewhitening == 3518
        assert j_r_s_m_r_i_data_transforms_0.use_seed is True
        tuple_1 = j_r_s_m_r_i_data_transforms_0.__call__(
            ndarray_0, ndarray_0, ndarray_0, ndarray_0, ndarray_0, dict_0, str_1, int_1
        )
    except BaseException:
        pass


def test_case_6():
    try:
        bool_0 = None
        int_0 = 97
        bool_1 = False
        str_0 = "w+&yC_66Rx*JxV?"
        bool_2 = False
        j_r_s_m_r_i_data_transforms_0 = module_0.JRSMRIDataTransforms(
            bool_0, int_0, int_0, bool_1, bool_0, str_0, bool_2
        )
    except BaseException:
        pass
