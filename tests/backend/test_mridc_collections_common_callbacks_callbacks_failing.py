# coding=utf-8
# Automatically generated by Pynguin.
import mridc.collections.common.callbacks.callbacks as module_0


def test_case_0():
    try:
        log_epoch_time_callback_0 = module_0.LogEpochTimeCallback()
        set_0 = {log_epoch_time_callback_0, log_epoch_time_callback_0}
        bool_0 = False
        list_0 = [log_epoch_time_callback_0]
        var_0 = log_epoch_time_callback_0.on_train_epoch_start(list_0, log_epoch_time_callback_0)
        log_epoch_time_callback_1 = module_0.LogEpochTimeCallback()
        var_1 = log_epoch_time_callback_1.on_train_epoch_start(set_0, bool_0)
        str_0 = ":"
        float_0 = -2933.6989
        log_epoch_time_callback_2 = module_0.LogEpochTimeCallback()
        bool_1 = False
        set_1 = set()
        var_2 = log_epoch_time_callback_2.on_train_epoch_start(bool_1, set_1)
        bool_2 = True
        log_epoch_time_callback_3 = module_0.LogEpochTimeCallback()
        dict_0 = {log_epoch_time_callback_2: bool_2}
        var_3 = log_epoch_time_callback_2.on_train_epoch_start(dict_0, log_epoch_time_callback_2)
        var_4 = log_epoch_time_callback_2.on_train_epoch_end(str_0, float_0)
    except BaseException:
        pass


def test_case_1():
    try:
        log_epoch_time_callback_0 = module_0.LogEpochTimeCallback()
        str_0 = "C>+I882S.^vm5z"
        int_0 = 762
        var_0 = log_epoch_time_callback_0.on_train_epoch_end(str_0, int_0)
    except BaseException:
        pass


def test_case_2():
    try:
        str_0 = "/B0/target"
        bool_0 = False
        float_0 = -3386.5
        list_0 = [bool_0, str_0]
        log_epoch_time_callback_0 = module_0.LogEpochTimeCallback()
        var_0 = log_epoch_time_callback_0.on_train_epoch_end(float_0, list_0)
    except BaseException:
        pass


def test_case_3():
    try:
        log_epoch_time_callback_0 = module_0.LogEpochTimeCallback()
        bytes_0 = b"\xfe\x81\xec\x9a"
        dict_0 = {bytes_0: bytes_0}
        int_0 = 849
        var_0 = log_epoch_time_callback_0.on_train_epoch_end(dict_0, int_0)
    except BaseException:
        pass


def test_case_4():
    try:
        bytes_0 = b"I#\x90(\xe4"
        log_epoch_time_callback_0 = module_0.LogEpochTimeCallback()
        bool_0 = True
        list_0 = [bytes_0, bool_0, log_epoch_time_callback_0]
        float_0 = None
        var_0 = log_epoch_time_callback_0.on_train_epoch_start(list_0, float_0)
        str_0 = "@\n~k?9|*y8{spiD"
        dict_0 = {str_0: log_epoch_time_callback_0}
        set_0 = {bool_0}
        var_1 = log_epoch_time_callback_0.on_train_epoch_end(dict_0, set_0)
    except BaseException:
        pass


def test_case_5():
    try:
        float_0 = -289.8
        str_0 = "ohmnc;>gLmXX\\\rFLn_"
        list_0 = []
        log_epoch_time_callback_0 = module_0.LogEpochTimeCallback()
        var_0 = log_epoch_time_callback_0.on_train_epoch_start(str_0, list_0)
        list_1 = []
        bytes_0 = b""
        log_epoch_time_callback_1 = module_0.LogEpochTimeCallback()
        var_1 = log_epoch_time_callback_1.on_train_epoch_start(list_1, bytes_0)
        str_1 = ":s@Ne}"
        log_epoch_time_callback_2 = module_0.LogEpochTimeCallback()
        var_2 = log_epoch_time_callback_2.on_train_epoch_end(float_0, str_1)
    except BaseException:
        pass


def test_case_6():
    try:
        log_epoch_time_callback_0 = module_0.LogEpochTimeCallback()
    except BaseException:
        pass
