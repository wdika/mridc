# coding=utf-8
# Automatically generated by Pynguin.
import mridc.core.optim.adafactor as module_0


def test_case_0():
    try:
        int_0 = 107
        tuple_0 = ()
        bool_0 = False
        str_0 = "E^ -5."
        adafactor_0 = module_0.Adafactor(int_0, bool_0, str_0, tuple_0)
    except BaseException:
        pass


def test_case_1():
    try:
        list_0 = None
        complex_0 = None
        list_1 = [list_0, complex_0]
        bytes_0 = None
        adafactor_0 = module_0.Adafactor(list_1, bytes_0)
    except BaseException:
        pass


def test_case_2():
    try:
        bool_0 = False
        str_0 = "Iz"
        float_0 = -545.705723
        set_0 = {float_0, str_0}
        bytes_0 = b"uw\xcfW\xdc\x11\xfa\x92\x10\xcbl0\xa9\xd4\xba0"
        str_1 = "itbMmC;FvQnHCu+0VU"
        str_2 = 'w8Pz\x0b"~h'
        adafactor_0 = module_0.Adafactor(set_0, bytes_0, str_1, str_2, bool_0)
    except BaseException:
        pass


def test_case_4():
    try:
        str_0 = "z>g(\\)[3U-s$l"
        float_0 = -1606.4
        adafactor_0 = module_0.Adafactor(float_0, str_0, float_0)
    except BaseException:
        pass


def test_case_5():
    try:
        bytes_0 = None
        adafactor_0 = None
        list_0 = [bytes_0, bytes_0, adafactor_0]
        bool_0 = True
        adafactor_1 = module_0.Adafactor(bytes_0, list_0, bool_0)
    except BaseException:
        pass


def test_case_6():
    try:
        str_0 = None
        set_0 = {str_0}
        adafactor_0 = module_0.Adafactor(set_0)
    except BaseException:
        pass
