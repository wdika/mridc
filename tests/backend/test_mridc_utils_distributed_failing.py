# coding=utf-8
# Automatically generated by Pynguin.
import mridc.utils.distributed as module_0


def test_case_0():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0}
        var_0 = module_0.initialize_distributed(set_0)
    except BaseException:
        pass


def test_case_1():
    try:
        complex_0 = None
        var_0 = module_0.initialize_distributed(complex_0)
    except BaseException:
        pass


def test_case_2():
    try:
        int_0 = -53
        bool_0 = True
        list_0 = [int_0, bool_0, bool_0]
        var_0 = module_0.initialize_distributed(list_0)
    except BaseException:
        pass


def test_case_3():
    try:
        int_0 = 698
        list_0 = [int_0]
        dict_0 = None
        tuple_0 = (dict_0,)
        tuple_1 = list_0, tuple_0, list_0
        str_0 = "Wn*p"
        str_1 = "NPV5ma[(vs\nhol`vQ"
        tuple_2 = tuple_1, str_0, str_1
        var_0 = module_0.initialize_distributed(int_0, tuple_2)
    except BaseException:
        pass


def test_case_4():
    try:
        bytes_0 = b"\xbb"
        var_0 = module_0.initialize_distributed(bytes_0)
    except BaseException:
        pass


def test_case_5():
    try:
        bytes_0 = None
        str_0 = "$_MuY2E\r"
        tuple_0 = bytes_0, str_0
        var_0 = module_0.initialize_distributed(tuple_0)
    except BaseException:
        pass


def test_case_6():
    try:
        bytes_0 = b"J\x1b\x8f\x9d\x07W\xc0\x9a\x15QN"
        var_0 = module_0.initialize_distributed(bytes_0)
    except BaseException:
        pass


def test_case_7():
    try:
        int_0 = -1061
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
        list_0 = [dict_0, dict_0, int_0]
        var_0 = module_0.initialize_distributed(int_0, list_0)
    except BaseException:
        pass
